/*
 * handler.c
 *
 *  Created on: Dec 4, 2024
 *      Author: shoai
 */
#include"main.h"

int extract_command(command_t *cmd);
void process_command(command_t *cmd);


void menu_task(void *parameters)
{
	const char* msg_menu = "===========================\n"
							"|           Menu           |\n"
							"==========================\n"
			                    "LED Effect     ----> 0\n"
							    "Date and time  ----> 1\n"
								"Exit           ----> 2\n"
								"Enter your choice here : ";
	while(1)
	{
		xQueueSend(q_print,&msg_menu,portMAX_DELAY);

		xTaskNotifyWait(0,0,&cmd_addr,portMAX_DELAY);

	}

}
void cmd_handler_task(void *parameters)
{

	BaseType_t ret;
	command_t cmd;
	while(1)
	{
		ret=xTaskNotifyWait(0,0,NULL,portMAX_DELAY);

		process_command(&cmd);

	}

}


void process_command(command_t *cmd)
{
	extract_command(cmd);

	switch(current_state)
	{
	case sMainmenu:
		xTaskNotify(handle_menu_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;
	case sLedEffect:
		xTaskNotify(handle_led_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;
	case sRtcMenu:
		xTaskNotify(handle_rtc_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;

	case sRtcTimeConfig:
		xTaskNotify(handle_rtc_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;
	case SRtcDataConfig:
		xTaskNotify(handle_rtc_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;
	case sRtcReport:
		xTaskNotify(handle_rtc_task,(uint32_t)cmd,eSetValueWithOverwrite);
	break;
	}

}

int extract_command(command_t *cmd)
{
	BaseType_t status;
	uint8_t item;

	status= uxQueueMessagesWaiting(q_data);
	if (!status)
		return -1;

	uint8_t i=0;
	do{

	status= xQueueReceive(q_data, &item, 0);
	if (status==pdTRUE)
		cmd->payload[i++]=item;
	}
	while(item != '\n');

	cmd->payload[i-1]= '\0';
	cmd->Len=i-1;

	return 0;


}

void print_task(void *parameters)
{
	while(1)
	{

	}
}
void led_task(void *parameters)
{
	while(1)
	{

	}
}
void rtc_task(void *parameters)
{
	while(1)
	{

	}
}
